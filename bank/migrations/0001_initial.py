# Generated by Django 4.1.1 on 2023-12-16 10:45

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('Checking', 'Checking'), ('Savings', 'Savings'), ('Time Deposit', 'Time Deposit'), ('Personal Loan', 'Personal Loan'), ('Credit Line', 'Credit Line'), ('DH Real Estate Loan', 'DH Real Estate Loan'), ('Business Loan', 'Business Loan'), ('Real Estate Loan', 'Real Estate Loan')], max_length=300, null=True)),
                ('account_number', models.CharField(max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,12}$')])),
                ('created_on', models.DateField(auto_now_add=True)),
                ('suspend_account', models.BooleanField(default=False)),
                ('block_account', models.BooleanField(default=False)),
                ('block_account_message', models.TextField(default='This account has been blocked Kindly contact the administrator to learn more. Or, enter a valid username and password.')),
                ('suspend_account_message', models.TextField(default='This account has been suspended Kindly contact the administrator to learn more. Or, enter a valid username and password.')),
            ],
            options={
                'ordering': ['account_type', 'created_on'],
            },
        ),
        migrations.CreateModel(
            name='CardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='E.g. Master Card', max_length=200, null=True)),
                ('company_logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=14, null=True)),
                ('amount', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PostTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, null=True)),
                ('date', models.DateField(null=True)),
                ('amount', models.IntegerField()),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.account')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,12}$')])),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('otp', models.CharField(max_length=255)),
                ('amount', models.IntegerField()),
                ('receiver_email', models.EmailField(blank=True, max_length=254)),
                ('routing_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('SSN', localflavor.us.models.USSocialSecurityNumberField(max_length=11)),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('home_address', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_name', models.CharField(max_length=200, null=True)),
                ('currency_symbol', models.CharField(max_length=100, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.country')),
            ],
            options={
                'verbose_name_plural': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='CreateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('top_up_type', models.CharField(choices=[('Credit', 'Credit'), ('Debit', 'Debit')], max_length=300, null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.account')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(help_text='Card number should be 16 digits', max_length=16, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,16}$')])),
                ('expiry_date', models.DateField()),
                ('cvv', models.PositiveIntegerField(help_text='CVV should be 3 digits', validators=[django.core.validators.MaxValueValidator(999)])),
                ('account', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_account', to='bank.account')),
                ('card_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.cardtype')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_abbr', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank.country')),
            ],
            options={
                'ordering': ['bank_fullname'],
            },
        ),
        migrations.AddField(
            model_name='account',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account', to='bank.customer'),
        ),
    ]
